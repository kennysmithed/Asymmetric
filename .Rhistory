exp1.data.by.block.8317$DummyPair <- droplevels(exp1.data.by.block.8317$Pair)
#change levels to integers
levels(exp1.data.by.block.8317$DummyPair) <- 1:length(levels(exp1.data.by.block.8317$DummyPair))
#and recombine
exp1.data.by.block.dummyp <- rbind(exp1.data.by.block.6633,exp1.data.by.block.8317)
#By-pair figure
ggplot(data=exp1.data.by.block.dummyp, aes(x=BlockNewlines, y=ProportionMarkedSingulars, group=ParticipantID, colour=Pair,ymin=0,ymax=1)) +
theme_bw() +
facet_grid(DummyPair ~ Condition) +
geom_line() +
ylab("Proportion Marked Singulars") +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,1,1/3),labels=c("0","1/3","2/3","1")) +
theme(strip.text.y = element_blank()) +
theme(axis.title.x = element_blank())
#By-pair figure for paper
ggplot(data=exp1.data.by.block.dummyp, aes(x=BlockNewlines, y=ProportionMarkedSingulars, group=ParticipantID, colour=Pair,ymin=0,ymax=1)) +
theme_bw() +
facet_grid(DummyPair ~ Condition) +
geom_line() +
ylab("Proportion Marked Singulars") +
theme(legend.position="none") +
scale_y_continuous(breaks=seq(0,1,1/3),labels=c("0","1/3","2/3","1")) +
theme(strip.text.y = element_blank()) +
theme(axis.title.x = element_blank()) +
ggsave(file="Plots/Exp1NumMarkingByPair.pdf",width=8, height=10)
#Means and CIs
ggplot(data=exp1.data.by.block, aes(x=Participant, y=ProportionMarkedSingulars, group=Participant, shape=Participant,fill=Participant)) +
theme_bw() +
facet_grid(Condition~Block) +
stat_summary(geom='bar', fun.y='mean', position='dodge',colour='black') +
stat_summary(geom='errorbar',fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",colour="black",width=0.1) +
stat_summary(geom='point', fun.y='mean', position='dodge',colour='black') +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
coord_cartesian(ylim=c(0,1)) +
scale_y_continuous(breaks=seq(0,1,1/3),labels=c("0","1/3","2/3","1")) +
ylab("Proportion Marked Singulars") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none")
#Means and CIs - for paper
ggplot(data=exp1.data.by.block, aes(x=Participant, y=ProportionMarkedSingulars, group=Participant, shape=Participant,fill=Participant)) +
theme_bw() +
facet_grid(Condition~Block) +
stat_summary(geom='bar', fun.y='mean', position='dodge',colour='black') +
stat_summary(geom='errorbar',fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",colour="black",width=0.1) +
stat_summary(geom='point', fun.y='mean', position='dodge',colour='black') +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
coord_cartesian(ylim=c(0,1)) +
scale_y_continuous(breaks=seq(0,1,1/3),labels=c("0","1/3","2/3","1")) +
ylab("Proportion Marked Singulars") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggsave(file="Plots/Exp1NumMarking.pdf",width=8, height=4)
systematic.users <- subset(exp1.data.by.block,Block=="Interaction Block 2" & (ProportionMarkedSingulars==1 | ProportionMarkedSingulars==0))
plyr::ddply(systematic.users,~Condition,plyr::summarise,Current_N=length(unique(Pair)))
#In order to count convergence on systematic use/non-use, aggregating over participants in each pair
exp1.data.by.block.agg <- aggregate(ProportionMarkedSingulars~Condition+Pair+Block,data=exp1.data.by.block,FUN=mean)
systematic.user.pairs <- subset(exp1.data.by.block.agg,Block=="Interaction Block 2" & ProportionMarkedSingulars==1)
systematic.user.pairs$Pair
length(unique(systematic.user.pairs$Pair))
systematic.nonuser.pairs <- subset(exp1.data.by.block.agg,Block=="Interaction Block 2" & ProportionMarkedSingulars==0)
systematic.nonuser.pairs$Pair
length(unique(systematic.nonuser.pairs$Pair))
#The most convenient way to calculate differences from block to block is to restructure the data to wide format.
#BlockNewlines causes irritation here, so selecting it out
exp1.change.data <- tidyr::spread(data=dplyr::select(exp1.data.by.block,-BlockNewlines),Block,ProportionMarkedSingulars)
exp1.change.data$ChangeTrainingRecall1 <- exp1.change.data$'Recall 1' - exp1.change.data$'Training'
exp1.change.data$ChangeRecall1Interaction2 <- exp1.change.data$'Interaction Block 2'-exp1.change.data$'Recall 1'
exp1.change.data$ChangeRecall1Recall2 <- exp1.change.data$'Recall 2'-exp1.change.data$'Recall 1'
#convert back to long format for plotting
exp1.change.data.for.plotting <- dplyr::select(exp1.change.data,-Training,-'Recall 1',-'Recall 2',-'Interaction Block 1',-'Interaction Block 2')
exp1.change.data.for.plotting <- tidyr::gather(exp1.change.data.for.plotting,
BlockToBlock,Change,ChangeTrainingRecall1,ChangeRecall1Interaction2,ChangeRecall1Recall2)
#Make column names more user-friendly
exp1.change.data.for.plotting$BlockToBlock <- plyr::revalue(exp1.change.data.for.plotting$BlockToBlock,
c("ChangeTrainingRecall1"="Training to Recall 1",
"ChangeRecall1Interaction2"="Recall 1 to Interaction Block 2",
"ChangeRecall1Recall2"="Recall 1 to Recall 2"))
#what I am actually going to want to plot for the change data is either both conditions collapsed, but seperated by P1/P2,Both Ps.
#to do this, I am going to duplicate the data for the "Both Ps" column, stick them together, and remove the Condition column
exp1.change.data.for.plotting.Pscombined <- exp1.change.data.for.plotting
exp1.change.data.for.plotting.Pscombined$Participant <- "Both Ps"
exp1.change.data.for.plotting.combined <- rbind(exp1.change.data.for.plotting,exp1.change.data.for.plotting.Pscombined)
exp1.change.data.for.plotting.combined$Condition <- NULL
#want to reorder the levels so that the BothPs data is last
exp1.change.data.for.plotting.combined$Participant <- factor(exp1.change.data.for.plotting.combined$Participant,levels=c("P1","P2","Both Ps"))
ggplot(data=subset(exp1.change.data.for.plotting.combined,BlockToBlock=="Training to Recall 1"), aes(x=Participant, y=Change, fill=Participant)) +
theme_bw() +
geom_boxplot() +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(limits = c(-1,1.1),breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggtitle("Training to Recall 1")
#for paper - includes annotations for statistical significance.
ggplot(data=subset(exp1.change.data.for.plotting.combined,BlockToBlock=="Training to Recall 1"), aes(x=Participant, y=Change, fill=Participant)) +
theme_bw() +
geom_boxplot() +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(limits = c(-1,1.1),breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggtitle("Training to Recall 1") +
annotate("text",x=1.5,y=1.09,label="**") + #add ** to indicate p<.01 between participants
geom_segment(aes(x=1, y=1.1, xend=1.4, yend=1.1)) + geom_segment(aes(x=1.6, y=1.1, xend=2, yend=1.1)) + #add lines either side of **
annotate("text",x=1,y=3/6,label="p=.051") + #add note about n.s.difference from 0
annotate("text",x=2,y=-2.4/6,label="*") + #add note about n.s.difference from 0
annotate("text",x=3,y=-2.4/6,label="n.s.") + #add note about n.s.difference from 0
ggsave(file="Plots/Exp1TrainingToRecall1Change.pdf",width=4, height=4)
ggplot(data=subset(exp1.change.data.for.plotting.combined,BlockToBlock=="Recall 1 to Interaction Block 2"), aes(x=Participant, y=Change, fill=Participant)) +
theme_bw() +
geom_boxplot() +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(limits = c(-1,1.1),breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggtitle("Recall 1 To Interaction Block 2")
#Plot for paper - strip out axis labels since these are provides elsewhere, add annotations
ggplot(data=subset(exp1.change.data.for.plotting.combined,BlockToBlock=="Recall 1 to Interaction Block 2"), aes(x=Participant, y=Change, fill=Participant)) +
theme_bw() +
geom_boxplot() +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(limits = c(-1,1.1),breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change") +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
theme(legend.position="none") +
ggtitle("Recall 1 To Interaction Block 2") +
annotate("text",x=1.5,y=1.1,label="**") + #signficant difference between ps
geom_segment(aes(x=1, y=1.1, xend=1.4, yend=1.1)) + geom_segment(aes(x=1.6, y=1.1, xend=2, yend=1.1)) + #add lines either side of text
annotate("text",x=0.8,y=1/6,label="***") + #add note about difference from 0 for P1s
annotate("text",x=1.8,y=1/6,label="n.s.") + #add note about difference from 0 for P2s
annotate("text",x=2.8,y=1/6,label="**") + #add note about difference from 0 overall
ggsave(file="Plots/Exp1Recall1ToInteraction2Change.pdf",width=4, height=4)
ggplot(data=subset(exp1.change.data.for.plotting.combined,BlockToBlock=="Recall 1 to Recall 2"), aes(x=Participant, y=Change, fill=Participant)) +
theme_bw() +
geom_boxplot() +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(limits = c(-1,1.1),breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggtitle("Recall 1 To Recall 2")
#Plot for paper - missing y axis title, annotations
ggplot(data=subset(exp1.change.data.for.plotting.combined,BlockToBlock=="Recall 1 to Recall 2"), aes(x=Participant, y=Change, fill=Participant)) +
theme_bw() +
geom_boxplot() +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(limits = c(-1,1.1),breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
theme(axis.title.y = element_blank()) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
ggtitle("Recall 1 To Recall 2") +
annotate("text",x=1.5,y=1.1,label="p=.064") + #marginal difference between ps
geom_segment(aes(x=1, y=1.1, xend=1.2, yend=1.1)) + geom_segment(aes(x=1.8, y=1.1, xend=2, yend=1.1)) + #add lines either side of text
annotate("text",x=1,y=5/6,label="**") + #add note about difference from 0 for P1s
annotate("text",x=2,y=5/6,label="n.s.") + #add note about difference from 0 for P2s
annotate("text",x=3,y=5/6,label="**") + #add note about difference from 0 overall
ggsave(file="Plots/Exp1Recall1ToRecall2Change.pdf",width=4, height=4)
wilcox.test(subset(exp1.change.data,Condition=="Condition: 66-33")$ChangeTrainingRecall1,
subset(exp1.change.data,Condition=="Condition: 83-17")$ChangeTrainingRecall1)
wilcox.test(subset(exp1.change.data,Participant=="P1")$ChangeTrainingRecall1,
subset(exp1.change.data,Participant=="P2")$ChangeTrainingRecall1)
wilcox.test(exp1.change.data$ChangeTrainingRecall1)
wilcox.test(subset(exp1.change.data,Participant=="P1")$ChangeTrainingRecall1)
wilcox.test(subset(exp1.change.data,Participant=="P2")$ChangeTrainingRecall1)
wilcox.test(subset(exp1.change.data,Condition=="Condition: 66-33")$ChangeRecall1Interaction2,
subset(exp1.change.data,Condition=="Condition: 83-17")$ChangeRecall1Interaction2)
wilcox.test(subset(exp1.change.data,Participant=="P1")$ChangeRecall1Interaction2,
subset(exp1.change.data,Participant=="P2")$ChangeRecall1Interaction2)
wilcox.test(exp1.change.data$ChangeRecall1Interaction2)
wilcox.test(subset(exp1.change.data,Participant=="P1")$ChangeRecall1Interaction2)
wilcox.test(subset(exp1.change.data,Participant=="P2")$ChangeRecall1Interaction2)
wilcox.test(subset(exp1.change.data,Condition=="Condition: 66-33")$ChangeRecall1Recall2,
subset(exp1.change.data,Condition=="Condition: 83-17")$ChangeRecall1Recall2)
wilcox.test(subset(exp1.change.data,Participant=="P1")$ChangeRecall1Recall2,
subset(exp1.change.data,Participant=="P2")$ChangeRecall1Recall2)
wilcox.test(exp1.change.data$ChangeRecall1Recall2)
wilcox.test(subset(exp1.change.data,Participant=='P1')$ChangeRecall1Recall2)
wilcox.test(subset(exp1.change.data,Participant=='P2')$ChangeRecall1Recall2)
# The easiest way to do this is to build a wide-format table by subsetting based on P then merging
p1 <- dplyr::select(subset(exp1.data.by.block,Participant=="P1"),-Participant,-ParticipantID)
p2 <- dplyr::select(subset(exp1.data.by.block,Participant=="P2"),-Participant,-ParticipantID)
exp1.diffs <- merge(p1,p2,by=c('Condition','Pair','Block','BlockNewlines'))
#calculate absolute diffs
exp1.diffs$Difference <- abs(exp1.diffs$ProportionMarkedSingulars.x-exp1.diffs$ProportionMarkedSingulars.y)
#remove unnecessary columns, reorder Block again
exp1.diffs <- dplyr::select(exp1.diffs,-ProportionMarkedSingulars.x,-ProportionMarkedSingulars.y)
ggplot(data=exp1.diffs, aes(x=BlockNewlines, y=Difference, fill=Condition,ymin=0,ymax=1)) +
theme_bw() +
geom_boxplot() +
facet_grid(Condition~.) +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(breaks=seq(0,1,1/3),labels=c("0","1/3","2/3","1")) +
ylab("Within-Pair Difference") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none")
#Plot for paper
ggplot(data=exp1.diffs, aes(x=BlockNewlines, y=Difference, fill=Condition,ymin=0,ymax=1)) +
theme_bw() +
geom_boxplot() +
facet_grid(Condition~.) +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(breaks=seq(0,1,1/3),labels=c("0","1/3","2/3","1")) +
ylab("Within-Pair Difference") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggsave(file="Plots/Exp1DiffPlot.pdf",width=5, height=3)
#The most convenient way to calculate differences from block to block is to restructure the data to wide format.
exp1.diffs.change.data <- tidyr::spread(data=dplyr::select(exp1.diffs,-BlockNewlines),Block,Difference)
exp1.diffs.change.data$ChangeTrainingRecall1 <- exp1.diffs.change.data$'Recall 1' - exp1.diffs.change.data$'Training'
exp1.diffs.change.data$ChangeRecall1Interaction2 <- exp1.diffs.change.data$'Interaction Block 2'-exp1.diffs.change.data$'Recall 1'
exp1.diffs.change.data$ChangeRecall1Recall2 <- exp1.diffs.change.data$'Recall 2'-exp1.diffs.change.data$'Recall 1'
#convert back to long format for plotting
exp1.diffs.change.data.for.plotting <- dplyr::select(exp1.diffs.change.data,-Training,-'Recall 1',-'Recall 2',-'Interaction Block 1',-'Interaction Block 2')
exp1.diffs.change.data.for.plotting <- tidyr::gather(exp1.diffs.change.data.for.plotting,
BlockToBlock,DifferenceChange,ChangeTrainingRecall1,ChangeRecall1Interaction2,ChangeRecall1Recall2)
#Make column names more user-friendly
exp1.diffs.change.data.for.plotting$BlockToBlock <- plyr::revalue(exp1.diffs.change.data.for.plotting$BlockToBlock,
c("ChangeTrainingRecall1"="Training to Recall 1",
"ChangeRecall1Interaction2"="Recall 1 to Interaction Block 2",
"ChangeRecall1Recall2"="Recall 1 to Recall 2"))
#Now duplicate data and add in "All Experiment 1 data", with all the data from both conditions, not seperated by Participant
exp1.diffs.change.data.for.plotting.combined <- exp1.diffs.change.data.for.plotting
exp1.diffs.change.data.for.plotting.combined$Condition <- "Both\nconditions"
#For Recall 1 to Interaction 2 I want to plot the conditions seperately and combined
ggplot(data=subset(rbind(exp1.diffs.change.data.for.plotting,
exp1.diffs.change.data.for.plotting.combined),BlockToBlock=="Recall 1 to Interaction Block 2"), aes(x=Condition, y=DifferenceChange, fill=Condition)) +
theme_bw() +
geom_boxplot() +
expand_limits(y=1) +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change In Within-Pair Difference") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggtitle("Recall 1 to Interaction Block 2")
#Plot for paper
ggplot(data=subset(rbind(exp1.diffs.change.data.for.plotting,
exp1.diffs.change.data.for.plotting.combined),BlockToBlock=="Recall 1 to Interaction Block 2"), aes(x=Condition, y=DifferenceChange, fill=Condition)) +
theme_bw() +
geom_boxplot() +
expand_limits(y=1) +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change In Within-Pair Difference") +
theme(axis.title.x = element_blank()) +
theme(legend.position="none") +
ggtitle("Recall 1 to Interaction Block 2") +
annotate("text",x=1.5,y=5/6,label="p=.079") + #marginal difference between conditions
geom_segment(aes(x=1, y=5/6, xend=1.2, yend=5/6)) + geom_segment(aes(x=1.8, y=5/6, xend=2, yend=5/6)) + #add lines either side of text
annotate("text",x=1,y=1/3,label="***") + #add note about difference from 0 for P1s
annotate("text",x=2,y=1/3,label="***") + #add note about difference from 0 for P2s
annotate("text",x=3,y=1/3,label="***") + #add note about difference from 0 overall
ggsave(file="Plots/Exp1DiffChangeRecall1Interaction2.pdf",width=5, height=3)
#For Recall 1 to Recall 2 I want to plot both conditions combined only
ggplot(data=subset(exp1.diffs.change.data.for.plotting.combined,BlockToBlock=="Recall 1 to Recall 2"), aes(x=Condition, y=DifferenceChange, fill=Condition)) +
theme_bw() +
geom_boxplot() +
expand_limits(y=1) +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change In Within-Pair Difference") +
theme(axis.title.x = element_blank()) +
#theme(strip.text.y = element_blank()) +
theme(legend.position="none",plot.title = element_text(size=12,hjust=0.5)) +
ggtitle("Recall 1 to Recall 2")
#Plot for paper -0 no y axis text, annotations
ggplot(data=subset(exp1.diffs.change.data.for.plotting.combined,BlockToBlock=="Recall 1 to Recall 2"), aes(x=Condition, y=DifferenceChange, fill=Condition)) +
theme_bw() +
geom_boxplot() +
expand_limits(y=1) +
scale_fill_manual(values=c(my.colours[2],my.colours[1],my.colours[3])) +
scale_y_continuous(breaks=seq(-1,1,1/3),labels=c("-1","-2/3","-1/3","0","+1/3","+2/3","+1")) +
ylab("Change In Within-Pair Difference") +
theme(axis.title.x = element_blank()) +
#theme(strip.text.y = element_blank()) +
theme(legend.position="none",plot.title = element_text(size=12,hjust=0.5)) +
theme(axis.title.y = element_blank()) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
ggtitle("Recall 1 to Recall 2") +
annotate("text",x=1,y=5.5/6,label="**") + #add note about difference from 0 for P1s
ggsave(file="Plots/Exp1DiffChangeRecall1Recall2.pdf",width=5*(.24/.74), height=3)
wilcox.test(subset(exp1.diffs.change.data,Condition=="Condition: 66-33")$ChangeRecall1Interaction2,
subset(exp1.diffs.change.data,Condition=="Condition: 83-17")$ChangeRecall1Interaction2)
wilcox.test(exp1.diffs.change.data$ChangeRecall1Interaction2)
wilcox.test(subset(exp1.diffs.change.data,Condition=="Condition: 66-33")$ChangeRecall1Interaction2)
wilcox.test(subset(exp1.diffs.change.data,Condition=="Condition: 83-17")$ChangeRecall1Interaction2)
wilcox.test(subset(exp1.diffs.change.data,Condition=="Condition: 66-33")$ChangeRecall1Recall2,
subset(exp1.diffs.change.data,Condition=="Condition: 83-17")$ChangeRecall1Recall2)
wilcox.test(exp1.diffs.change.data$ChangeRecall1Recall2)
veridical.mean.wpd <- mean(exp1.diffs.change.data$ChangeRecall1Interaction2)
veridical.mean.wpd
veridical.mean.wpd <- mean(exp1.diffs$Interaction2)
veridical.mean.wpd
head(exp1.diffs)
veridical.mean.wpd <- mean(subset(exp1.diffs,Block=="Interaction Block 2"$Difference))
veridical.mean.wpd <- mean(subset(exp1.diffs,Block=="Interaction Block 2")$Difference)
veridical.mean.wpd
#make a copy of the data to work with
exp1.data.by.block.pseudo <- exp1.data.by.block
head(exp1.data.by.block.pseudo)
p1.6633 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P1" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p1.6633
head(p1.6633)
#make a copy of the data to work with - we only need interaction block 2 data
exp1.data.by.block.pseudo <- subset(exp1.data.by.block,Block=="Interaction Block 2")
p1.6633 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P1" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p2.6633 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P2" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p1.8317 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P1" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
p2.8317 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P2" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
head(p1.6633)
sample?
''
?sample
sample(1:10)
#randomise pair assignments
p1.6633$Pair <- sample(p1.6633$Pair)
p2.6633$Pair <- sample(p2.6633$Pair)
p1.8317$Pair <- sample(p1.8317$Pair)
p2.8317$Pair <- sample(p2.8317$Pair)
head(p1.6633)
#make a copy of the data to work with - we only need interaction block 2 data
exp1.data.by.block.pseudo <- dplyr::select(subset(exp1.data.by.block,Block=="Interaction Block 2"),-Block,-BlockNewlines)
#subset it by block and participant
p1.6633 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P1" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p2.6633 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P2" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p1.8317 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P1" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
p2.8317 <- dplyr::select(subset(exp1.data.by.block.pseudo,Participant=="P2" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
#randomise pair assignments
p1.6633$Pair <- sample(p1.6633$Pair)
p2.6633$Pair <- sample(p2.6633$Pair)
p1.8317$Pair <- sample(p1.8317$Pair)
p2.8317$Pair <- sample(p2.8317$Pair)
exp1.diffs.pseudo <- merge(p1.6633,p2.6633,p1.8317,p2.8317,by=c('Condition','Pair'))
exp1.diffs.pseudo.6633 <- merge(p1.6633,p2.6633,by=c('Condition','Pair'))
exp1.diffs.pseudo.8317 <- merge(p1.8317,p2.8317,by=c('Condition','Pair'))
exp1.diffs.pseudo
exp1.diffs.pseudo.6633 <- merge(p1.6633,p2.6633,by=c('Condition','Pair'))
exp1.diffs.pseudo.8317 <- merge(p1.8317,p2.8317,by=c('Condition','Pair'))
exp1.diffs.pseudo <- rbind(exp1.diffs.pseudo.6633,exp1.diffs.pseudo.8317)
head(exp1.diffs.pseudo)
#calculate absolute diffs
exp1.diffs.pseudo$Difference <- abs(exp1.diffs.pseudo$ProportionMarkedSingulars.x-exp1.diffs.pseudo$ProportionMarkedSingulars.y)
#remove unnecessary columns, reorder Block again
exp1.diffs.pseudo <- dplyr::select(exp1.diffs.pseudo,-ProportionMarkedSingulars.x,-ProportionMarkedSingulars.y)
head(exp1.diffs.pseudo)
mean(exp1.diffs.pseudo$Difference)
sampled.diffs <- replicate(10,reassign.pairs(exp1.data.by.block.pseudo))
veridical.mean.wpd <- mean(subset(exp1.diffs,Block=="Interaction Block 2")$Difference)
#make a copy of the data to work with - we only need interaction block 2 data
exp1.data.by.block.pseudo <- dplyr::select(subset(exp1.data.by.block,Block=="Interaction Block 2"),-Block,-BlockNewlines)
#helper function to re-assign participants to pseudo-pairs - slightly laoborious
#in order to avoid mixing across conditions etc
reassign.pairs <- function(in.data) {
#subset data by block and participant
p1.6633 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p2.6633 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p1.8317 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
p2.8317 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
#randomise pair assignments
p1.6633$Pair <- sample(p1.6633$Pair)
p2.6633$Pair <- sample(p2.6633$Pair)
p1.8317$Pair <- sample(p1.8317$Pair)
p2.8317$Pair <- sample(p2.8317$Pair)
diffs.pseudo.6633 <- merge(p1.6633,p2.6633,by=c('Condition','Pair'))
diffs.pseudo.8317 <- merge(p1.8317,p2.8317,by=c('Condition','Pair'))
diffs.pseudo <- rbind(diffs.pseudo.6633,diffs.pseudo.8317)
#calculate absolute diffs
diffs.pseudo$Difference <-
abs(diffs.pseudo$ProportionMarkedSingulars.x-diffs.pseudo$ProportionMarkedSingulars.y)
#remove unnecessary columns, reorder Block again
diffs.pseudo <- dplyr::select(diffs.pseudo,-ProportionMarkedSingulars.x,-ProportionMarkedSingulars.y)
#calculate and return mean
mean(diffs.pseudo$Difference)
}
sampled.diffs <- replicate(10,reassign.pairs(exp1.data.by.block.pseudo))
sampled.diffs
sum(sampled.diffs < veridical.mean.wpd)
sampled.diffs <- replicate(100,reassign.pairs(exp1.data.by.block.pseudo))
sampled.diffs <- replicate(100,reassign.pairs(exp1.data.by.block.pseudo))
#this is the proportion of cases where we see the same or smaller within-pair difference
sum(sampled.diffs < veridical.mean.wpd)/length(sampled.diffs)
sampled.diffs <- replicate(1000,reassign.pairs(exp1.data.by.block.pseudo))
sampled.diffs <- replicate(1000,reassign.pairs(exp1.data.by.block.pseudo))
#this is the proportion of cases where we see the same or smaller within-pair difference
sum(sampled.diffs < veridical.mean.wpd)/length(sampled.diffs)
sampled.diffs
#report the mean of the sampled diffs
mean(sampled.diffs)
#this is the proportion of cases where we see the same or smaller within-pair difference
sum(sampled.diffs < veridical.mean.wpd)/length(sampled.diffs)
#this is the number of cases where we see the same or smaller within-pair difference
sum(sampled.diffs < veridical.mean.wpd)
veridical.mean.wpd <- mean(subset(exp1.diffs,Block=="Interaction Block 2")$Difference)
#make a copy of the data to work with - we only need interaction block 2 data
exp1.data.by.block.pseudo <- dplyr::select(subset(exp1.data.by.block,Block=="Interaction Block 2"),-Block,-BlockNewlines)
#helper function to re-assign participants to pseudo-pairs - slightly laoborious
#in order to avoid mixing across conditions etc
reassign.pairs <- function(in.data) {
#subset data by block and participant
p1.6633 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p2.6633 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p1.8317 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
p2.8317 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
#randomise pair assignments
#p1.6633$Pair <- sample(p1.6633$Pair)
#p2.6633$Pair <- sample(p2.6633$Pair)
#p1.8317$Pair <- sample(p1.8317$Pair)
#p2.8317$Pair <- sample(p2.8317$Pair)
diffs.pseudo.6633 <- merge(p1.6633,p2.6633,by=c('Condition','Pair'))
diffs.pseudo.8317 <- merge(p1.8317,p2.8317,by=c('Condition','Pair'))
diffs.pseudo <- rbind(diffs.pseudo.6633,diffs.pseudo.8317)
#calculate absolute diffs
diffs.pseudo$Difference <-
abs(diffs.pseudo$ProportionMarkedSingulars.x-diffs.pseudo$ProportionMarkedSingulars.y)
#remove unnecessary columns, reorder Block again
diffs.pseudo <- dplyr::select(diffs.pseudo,-ProportionMarkedSingulars.x,-ProportionMarkedSingulars.y)
#calculate and return mean
mean(diffs.pseudo$Difference)
}
sampled.diffs <- replicate(100,reassign.pairs(exp1.data.by.block.pseudo))
sampled.diffs <- replicate(100,reassign.pairs(exp1.data.by.block.pseudo))
#report the mean of the sampled diffs
mean(sampled.diffs)
#this is the number of cases where we see the same or smaller within-pair difference
sum(sampled.diffs < veridical.mean.wpd)
#this is the proportion of cases where we see the same or smaller within-pair difference
sum(sampled.diffs < veridical.mean.wpd)/length(sampled.diffs)
#this is the number of cases where we see the same or smaller within-pair difference
sum(sampled.diffs <= veridical.mean.wpd)
veridical.mean.wpd <- mean(subset(exp1.diffs,Block=="Interaction Block 2")$Difference)
#make a copy of the data to work with - we only need interaction block 2 data
exp1.data.by.block.pseudo <- dplyr::select(subset(exp1.data.by.block,Block=="Interaction Block 2"),-Block,-BlockNewlines)
#helper function to re-assign participants to pseudo-pairs - slightly laoborious
#in order to avoid mixing across conditions etc
reassign.pairs <- function(in.data) {
#subset data by block and participant
p1.6633 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p2.6633 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p1.8317 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
p2.8317 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
#randomise pair assignments
p1.6633$Pair <- sample(p1.6633$Pair)
p2.6633$Pair <- sample(p2.6633$Pair)
p1.8317$Pair <- sample(p1.8317$Pair)
p2.8317$Pair <- sample(p2.8317$Pair)
diffs.pseudo.6633 <- merge(p1.6633,p2.6633,by=c('Condition','Pair'))
diffs.pseudo.8317 <- merge(p1.8317,p2.8317,by=c('Condition','Pair'))
diffs.pseudo <- rbind(diffs.pseudo.6633,diffs.pseudo.8317)
#calculate absolute diffs
diffs.pseudo$Difference <-
abs(diffs.pseudo$ProportionMarkedSingulars.x-diffs.pseudo$ProportionMarkedSingulars.y)
#remove unnecessary columns, reorder Block again
diffs.pseudo <- dplyr::select(diffs.pseudo,-ProportionMarkedSingulars.x,-ProportionMarkedSingulars.y)
#calculate and return mean
mean(diffs.pseudo$Difference)
}
sampled.diffs <- replicate(100,reassign.pairs(exp1.data.by.block.pseudo))
#report the mean of the sampled diffs
mean(sampled.diffs)
#this is the number of cases where we see the same or smaller within-pair difference
sum(sampled.diffs <= veridical.mean.wpd)
#this is the proportion of cases where we see the same or smaller within-pair difference
sum(sampled.diffs <= veridical.mean.wpd)/length(sampled.diffs)
veridical.mean.wpd <- mean(subset(exp1.diffs,Block=="Interaction Block 2")$Difference)
#make a copy of the data to work with - we only need interaction block 2 data
exp1.data.by.block.pseudo <- dplyr::select(subset(exp1.data.by.block,Block=="Interaction Block 2"),-Block,-BlockNewlines)
#helper function to re-assign participants to pseudo-pairs - slightly laoborious
#in order to avoid mixing across conditions etc
reassign.pairs <- function(in.data) {
#subset data by block and participant
p1.6633 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p2.6633 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 66-33"),-Participant,-ParticipantID)
p1.8317 <- dplyr::select(subset(in.data,Participant=="P1" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
p2.8317 <- dplyr::select(subset(in.data,Participant=="P2" & Condition=="Condition: 83-17"),-Participant,-ParticipantID)
#randomise pair assignments
p1.6633$Pair <- sample(p1.6633$Pair)
p2.6633$Pair <- sample(p2.6633$Pair)
p1.8317$Pair <- sample(p1.8317$Pair)
p2.8317$Pair <- sample(p2.8317$Pair)
diffs.pseudo.6633 <- merge(p1.6633,p2.6633,by=c('Condition','Pair'))
diffs.pseudo.8317 <- merge(p1.8317,p2.8317,by=c('Condition','Pair'))
diffs.pseudo <- rbind(diffs.pseudo.6633,diffs.pseudo.8317)
#calculate absolute diffs
diffs.pseudo$Difference <-
abs(diffs.pseudo$ProportionMarkedSingulars.x-diffs.pseudo$ProportionMarkedSingulars.y)
#remove unnecessary columns, reorder Block again
diffs.pseudo <- dplyr::select(diffs.pseudo,-ProportionMarkedSingulars.x,-ProportionMarkedSingulars.y)
#calculate and return mean
mean(diffs.pseudo$Difference)
}
sampled.diffs <- replicate(1000,reassign.pairs(exp1.data.by.block.pseudo))
#report the mean of the sampled diffs
mean(sampled.diffs)
#this is the number of cases where we see the same or smaller within-pair difference
sum(sampled.diffs <= veridical.mean.wpd)
#this is the proportion of cases where we see the same or smaller within-pair difference
sum(sampled.diffs <= veridical.mean.wpd)/length(sampled.diffs)
sampled.diffs
veridical.mean.wpd
head(exp1.data)
levels(exp1.data$pairs)
unique(exp1.data$pairs)
unique(exp1.data$Pairs)
unique(exp1.data$Pair
)
