"0","#The most convenient way to calculate differences from block to block is to restructure the data to wide format."
"0","#BlockNewlines causes irritation here, so selecting it out"
"0","exp1.change.data <- tidyr::spread(data=dplyr::select(exp1.data.by.block,-BlockNewlines),Block,ProportionMarkedSingulars)"
"0","exp1.change.data$ChangeTrainingRecall1 <- exp1.change.data$'Recall 1' - exp1.change.data$'Training'"
"0","exp1.change.data$ChangeRecall1Interaction2 <- exp1.change.data$'Interaction Block 2'-exp1.change.data$'Recall 1'"
"0","exp1.change.data$ChangeRecall1Recall2 <- exp1.change.data$'Recall 2'-exp1.change.data$'Recall 1'"
"0","#convert back to long format for plotting"
"0","exp1.change.data.for.plotting <- dplyr::select(exp1.change.data,-Training,-'Recall 1',-'Recall 2',-'Interaction Block 1',-'Interaction Block 2')"
"0","exp1.change.data.for.plotting <- tidyr::gather(exp1.change.data.for.plotting,"
"0","BlockToBlock,Change,ChangeTrainingRecall1,ChangeRecall1Interaction2,ChangeRecall1Recall2)"
"0","#Make column names more user-friendly"
"0","exp1.change.data.for.plotting$BlockToBlock <- plyr::revalue(exp1.change.data.for.plotting$BlockToBlock,"
"0","                                                   c(""ChangeTrainingRecall1""=""Training to Recall 1"","
"0","                                                     ""ChangeRecall1Interaction2""=""Recall 1 to Interaction Block 2"","
"0","                                                     ""ChangeRecall1Recall2""=""Recall 1 to Recall 2""))"
"0","#what I am actually going to want to plot for the change data is either both conditions collapsed, but seperated by P1/P2,Both Ps."
"0","#to do this, I am going to duplicate the data for the ""Both Ps"" column, stick them together, and remove the Condition column"
"0","exp1.change.data.for.plotting.Pscombined <- exp1.change.data.for.plotting"
"0","exp1.change.data.for.plotting.Pscombined$Participant <- ""Both Ps"""
"0","exp1.change.data.for.plotting.combined <- rbind(exp1.change.data.for.plotting,exp1.change.data.for.plotting.Pscombined)"
"0","exp1.change.data.for.plotting.combined$Condition <- NULL"
"0","#want to reorder the levels so that the BothPs data is last"
"0","exp1.change.data.for.plotting.combined$Participant <- factor(exp1.change.data.for.plotting.combined$Participant,levels=c(""P1"",""P2"",""Both Ps""))"
